[DEFAULT]
#bind_ip = 127.0.0.1
bind_port = 8081
workers = auto
max_clients = 4096
user = root
log_name = saio-swauth
log_facility = LOG_LOCAL1
log_level = INFO
log_headers = True
eventlet_debug = true

[pipeline:main]
# Yes, proxy-logging appears twice. This is so that
# middleware-originated requests get logged too.
pipeline = catch_errors gatekeeper healthcheck proxy-logging cache bulk tempurl ratelimit container_sync swauth container-quotas account-quotas slo dlo versioned_writes proxy-logging proxy-server

[filter:catch_errors]
use = egg:swift#catch_errors

[filter:gatekeeper]
use = egg:swift#gatekeeper

[filter:healthcheck]
use = egg:swift#healthcheck

[filter:proxy-logging]
use = egg:swift#proxy_logging

[filter:cache]
use = egg:swift#memcache

[filter:bulk]
use = egg:swift#bulk

[filter:tempurl]
use = egg:swift#tempurl

[filter:ratelimit]
use = egg:swift#ratelimit

[filter:container_sync]
use = egg:swift#container_sync
current = //saio/saio_endpoint

[filter:swauth]
use = egg:swauth#swauth
set log_name = swauth
set log_facility = LOG_LOCAL1
set log_level = INFO
set log_headers = True
reseller_prefix = AUTH
auth_prefix = /auth/
default_swift_cluster = local#http://127.0.0.1:8081/v1.0#http://127.0.0.1:8081/v1.0
auth_type = plaintext
super_admin_key = swauthkey

#[filter:tempauth]
#use = egg:swift#tempauth
#user_admin_admin = admin .admin .reseller_admin
#user_test_tester = testing .admin
#user_test2_tester2 = testing2 .admin
#user_test_tester3 = testing3

[filter:container-quotas]
use = egg:swift#container_quotas

[filter:account-quotas]
use = egg:swift#account_quotas

[filter:slo]
use = egg:swift#slo

[filter:dlo]
use = egg:swift#dlo

[filter:versioned_writes]
use = egg:swift#versioned_writes
allow_versioned_writes = true

[app:proxy-server]
use = egg:swift#proxy
allow_account_management = true
account_autocreate = true
